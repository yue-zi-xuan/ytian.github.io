{"pages":[],"posts":[{"title":"Maven的使用","text":"Maven的基本命令compile：编译 将java源文件编译成.class文件 test ：测试项目 运行test目录下的测试用例 package ：项目打包 打包为xxx, xxx在xxx中指定 clean ：删除target目录 install ：安装 将当前项目放入maven本地仓库中，供其它项目使用 关于“坐标”groupId和artifactId构成了一个Jar包的坐标 groupId：所需Jar包的项目名 artifactId：所需Jar包的模块名 依赖范围scop compile 默认scop，表示当前依赖需要参与项目的编译；打包时会包含进去 provided 只会在编译，测试阶段起作用；依赖不会打入jar包中 runtime 参与运行阶段，打包时会包含 test 只在test域中起作用；打包时不会包含 system 表示使用系统目录下的依赖，需要和systemPath一起使用 optional 可选的 需要继承依赖需要继承的依赖放入 1234567891011&lt;dependencyManagement&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;cn.missbe.web.search&lt;/groupId&gt; &lt;artifactId&gt;resource-search&lt;/artifactId&gt; &lt;packaging&gt;pom&lt;/packaging&gt; &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt;&lt;/dependencyManagement&gt;","link":"/2022/12/26/Maven%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2022/12/26/hello-world/"},{"title":"My Test Post","text":"1System.out.println(hello Wrold);","link":"/2022/12/26/My-Test-Post/"},{"title":"ThreadPoolExecutor 源码阅读","text":"线程池的状态 RUNNING: Accept new tasks and process queued tasks,接受新的任务以及处理等待中的任务 SHUTDOWN: Don’t accept new tasks, but process queued tasks,不在接受新的任务，但是任然处理等待中的任务 STOP: Don’t accept new tasks, don’t process queued tasks, and interrupt in-progress tasks，不接受，不处理 TIDYING: All tasks have terminated, workerCount is zero, the thread transitioning to state TIDYING will run the terminated() hook method，当pool is empty时 TERMINATED: terminated() has completed 状态的变化 The transitions are: RUNNING -&gt; SHUTDOWN On invocation of shutdown(), perhaps implicitly in finalize() (RUNNING or SHUTDOWN) -&gt; STOP On invocation of shutdownNow() SHUTDOWN -&gt; TIDYING When both queue and pool are empty STOP -&gt; TIDYING When pool is empty TIDYING -&gt; TERMINATED When the terminated() hook method has completed Threads waiting in awaitTermination() will return when the state reaches TERMINATED.","link":"/2022/12/27/ThreadPoolExecutor-%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/"}],"tags":[{"name":"Maven","slug":"Maven","link":"/tags/Maven/"},{"name":"dev","slug":"dev","link":"/tags/dev/"},{"name":"Java","slug":"Java","link":"/tags/Java/"},{"name":"源码阅读","slug":"源码阅读","link":"/tags/%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/"},{"name":"多线程","slug":"多线程","link":"/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"}],"categories":[{"name":"部署","slug":"部署","link":"/categories/%E9%83%A8%E7%BD%B2/"},{"name":"并发编程","slug":"并发编程","link":"/categories/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"}]}